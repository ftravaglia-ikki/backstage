'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var router = require('./cjs/router-129b368d.cjs.js');
var pluginScaffolderNode = require('@backstage/plugin-scaffolder-node');
var pluginCatalogBackendModuleScaffolderEntityModel = require('@backstage/plugin-catalog-backend-module-scaffolder-entity-model');
require('@backstage/catalog-model');
require('@backstage/errors');
require('@backstage/integration');
require('@backstage/plugin-scaffolder-common');
require('@backstage/plugin-scaffolder-common/alpha');
require('express');
require('express-promise-router');
require('jsonschema');
require('zod');
require('yaml');
require('fs-extra');
require('@backstage/backend-common');
require('path');
require('luxon');
require('globby');
require('isbinaryfile');
require('isolated-vm');
require('lodash/get');
require('octokit');
require('libsodium-wrappers');
require('@octokit/webhooks');
require('azure-devops-node-api');
require('node-fetch');
require('crypto');
require('octokit-plugin-create-pull-request');
require('fs');
require('p-limit');
require('@gitbeaker/node');
require('uuid');
require('zen-observable');
require('p-queue');
require('winston');
require('nunjucks');
require('stream');
require('lodash');
require('@backstage/plugin-permission-node');
require('prom-client');
require('@backstage/plugin-permission-common');
require('url');
require('os');

const createTemplateAction = pluginScaffolderNode.createTemplateAction;
const executeShellCommand = pluginScaffolderNode.executeShellCommand;
const fetchContents = pluginScaffolderNode.fetchContents;
const ScaffolderEntitiesProcessor = pluginCatalogBackendModuleScaffolderEntityModel.ScaffolderEntitiesProcessor;

exports.DatabaseTaskStore = router.DatabaseTaskStore;
exports.TaskManager = router.TaskManager;
exports.TaskWorker = router.TaskWorker;
exports.TemplateActionRegistry = router.TemplateActionRegistry;
exports.createBuiltinActions = router.createBuiltinActions;
exports.createCatalogRegisterAction = router.createCatalogRegisterAction;
exports.createCatalogWriteAction = router.createCatalogWriteAction;
exports.createDebugLogAction = router.createDebugLogAction;
exports.createFetchCatalogEntityAction = router.createFetchCatalogEntityAction;
exports.createFetchPlainAction = router.createFetchPlainAction;
exports.createFetchPlainFileAction = router.createFetchPlainFileAction;
exports.createFetchTemplateAction = router.createFetchTemplateAction;
exports.createFilesystemDeleteAction = router.createFilesystemDeleteAction;
exports.createFilesystemRenameAction = router.createFilesystemRenameAction;
exports.createGithubActionsDispatchAction = router.createGithubActionsDispatchAction;
exports.createGithubDeployKeyAction = router.createGithubDeployKeyAction;
exports.createGithubEnvironmentAction = router.createGithubEnvironmentAction;
exports.createGithubIssuesLabelAction = router.createGithubIssuesLabelAction;
exports.createGithubRepoCreateAction = router.createGithubRepoCreateAction;
exports.createGithubRepoPushAction = router.createGithubRepoPushAction;
exports.createGithubWebhookAction = router.createGithubWebhookAction;
exports.createPublishAzureAction = router.createPublishAzureAction;
exports.createPublishBitbucketAction = router.createPublishBitbucketAction;
exports.createPublishBitbucketCloudAction = router.createPublishBitbucketCloudAction;
exports.createPublishBitbucketServerAction = router.createPublishBitbucketServerAction;
exports.createPublishBitbucketServerPullRequestAction = router.createPublishBitbucketServerPullRequestAction;
exports.createPublishGerritAction = router.createPublishGerritAction;
exports.createPublishGerritReviewAction = router.createPublishGerritReviewAction;
exports.createPublishGithubAction = router.createPublishGithubAction;
exports.createPublishGithubPullRequestAction = router.createPublishGithubPullRequestAction;
exports.createPublishGitlabAction = router.createPublishGitlabAction;
exports.createPublishGitlabMergeRequestAction = router.createPublishGitlabMergeRequestAction;
exports.createRouter = router.createRouter;
exports.createWaitAction = router.createWaitAction;
exports.ScaffolderEntitiesProcessor = ScaffolderEntitiesProcessor;
exports.createTemplateAction = createTemplateAction;
exports.executeShellCommand = executeShellCommand;
exports.fetchContents = fetchContents;
//# sourceMappingURL=index.cjs.js.map
